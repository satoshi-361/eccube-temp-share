<?php

/*
 * This file is part of EC-CUBE
 *
 * Copyright(c) EC-CUBE CO.,LTD. All Rights Reserved.
 *
 * http://www.ec-cube.co.jp/
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Plugin\CMBlogPro\Repository;

use Eccube\Doctrine\Query\Queries;
use Eccube\Repository\AbstractRepository;
use Eccube\Util\StringUtil;
use Eccube\Entity\Product;
use Symfony\Bridge\Doctrine\RegistryInterface;
/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends AbstractRepository
{
    /**
     * @var Queries
     */
    protected $queries;

    /**
     * @var EccubeConfig
     */
    protected $eccubeConfig;

    /**
     * ProductRepository constructor.
     *
     * @param RegistryInterface $registry
     * @param Queries $queries
     */
    public function __construct(
        RegistryInterface $registry,
        Queries $queries
    ) {
        parent::__construct($registry, Product::class);
        $this->queries = $queries;
    }

    /**
     * @param array $searchData
     *
     * @return null|Product
     */
    public function getList($searchData)
    {
        $qb = $this->createQueryBuilder('p')
            ->select('p');

        // id
        if (isset($searchData['id']) && StringUtil::isNotBlank($searchData['id'])) {
            $qb
                ->andWhere('p.id = :id')
                ->setParameter('id', $searchData['id']);
        }

        // Order By
        $qb->orderBy('p.id', 'ASC');

        return $qb->getQuery()->getResult();
    }
}
